# Note: all of the config entries below are just examples with placeholders. Be sure to edit and adjust to your needs when uncommenting.

# In case your config entries all use a common input/output parent directory, you can specify those here.
#   Every input/output paths in the rest of the config will then be expressed relative to these.
#   Those two top-level keys are optional and default to "." (the directory of the config file).
input_dir: ../Prose/ProseLib/Sources
output_dir: ../Prose/ProseLib/Sources

# Generate constants for your localized strings.
#   Be sure that SwiftGen only parses ONE locale (typically Base.lproj, or en.lproj, or whichever your development region is); otherwise it will generate the same keys multiple times.
#   SwiftGen will parse all `.strings` files found in that folder.
strings:
  - inputs: [AppLocalization/Resources/en.lproj]
    outputs:
      - templateName: structured-swift5
        output: AppLocalization/Generated/Strings+Generated.swift
        params:
          bundle: Bundle.fixedModule
          publicAccess: true

# Generate constants for your Assets Catalogs, including constants for images, colors, ARKit resources, etc.
#   This example also shows how to provide additional parameters to your template to customize the output.
#   - Especially the `forceProvidesNamespaces: true` param forces to create sub-namespace for each folder/group used in your Asset Catalogs, even the ones without "Provides Namespace". Without this param, SwiftGen only generates sub-namespaces for folders/groups which have the "Provides Namespace" box checked in the Inspector pane.
#   - To know which params are supported for a template, use `swiftgen template doc xcassets swift5` to open the template documentation on GitHub.
xcassets:
# - inputs: [Assets/Resources/Assets.xcassets]
#   outputs:
#     - templateName: swift5
#       output: Assets/Generated/Assets+Generated.swift
#       params:
#         bundle: Bundle.fixedModule
#         publicAccess: true
  - inputs: [PreviewAssets/Resources/Assets.xcassets]
    outputs:
      - templateName: swift5
        output: PreviewAssets/Generated/Assets+Generated.swift
        params:
          bundle: Bundle.fixedModule
          publicAccess: true
          enumName: PreviewAsset
  - inputs: [Assets/Resources/Colors.xcassets]
    outputs:
      - templatePath: ./xcassets-colors-swiftui.stencil
        output: Assets/Generated/Colors+Generated.swift
        params:
          bundle: Bundle.fixedModule
          publicAccess: true

files:
  - inputs: [ConversationFeature/Resources/Views]
    filter: .+\.html$
    outputs:
      - templateName: structured-swift5
        output: ConversationFeature/Generated/Files+Generated.swift
        params:
          bundle: Bundle.fixedModule
          publicAccess: false

# For more info, use `swiftgen config doc` to open the full documentation on GitHub.
# https://github.com/SwiftGen/SwiftGen/tree/6.5.1/Documentation/
